// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: protocols\texture.capnp

#include "protocols\texture.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<36> b_9a59cc24bdd96691 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145, 102, 217, 189,  36, 204,  89, 154,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     82, 103, 116,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 100,   0,   0,   0,   0,   0,
    114, 101, 100,  83, 105, 103, 110, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
    114, 103,   0,   0,   0,   0,   0,   0,
    114, 103,  83, 105, 103, 110, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9a59cc24bdd96691 = b_9a59cc24bdd96691.words;
#if !CAPNP_LITE
static const uint16_t m_9a59cc24bdd96691[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_9a59cc24bdd96691 = {
  0x9a59cc24bdd96691, b_9a59cc24bdd96691.words, 36, nullptr, m_9a59cc24bdd96691,
  0, 4, nullptr, nullptr, nullptr, { &s_9a59cc24bdd96691, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Rgtc_9a59cc24bdd96691, 9a59cc24bdd96691);
static const ::capnp::_::AlignedData<33> b_e7862489f94a0af0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    240,  10,  74, 249, 137,  36, 134, 231,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     66, 112, 116,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 103,  98,  97,   0,   0,   0,   0,
    114, 103,  98,  70, 108, 111,  97, 116,
     83, 105, 103, 110, 101, 100,   0,   0,
    114, 103,  98,  70, 108, 111,  97, 116,
     85, 110, 115, 105, 103, 110, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7862489f94a0af0 = b_e7862489f94a0af0.words;
#if !CAPNP_LITE
static const uint16_t m_e7862489f94a0af0[] = {1, 2, 0};
const ::capnp::_::RawSchema s_e7862489f94a0af0 = {
  0xe7862489f94a0af0, b_e7862489f94a0af0.words, 33, nullptr, m_e7862489f94a0af0,
  0, 3, nullptr, nullptr, nullptr, { &s_e7862489f94a0af0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Bptc_e7862489f94a0af0, e7862489f94a0af0);
static const ::capnp::_::AlignedData<34> b_b31f871133cef5fe = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    254, 245, 206,  51,  17, 135,  31, 179,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     83,  51, 116,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 103,  98,  49,   0,   0,   0,   0,
    114, 103,  98,  97,  49,   0,   0,   0,
    114, 103,  98,  97,  51,   0,   0,   0,
    114, 103,  98,  97,  53,   0,   0,   0, }
};
::capnp::word const* const bp_b31f871133cef5fe = b_b31f871133cef5fe.words;
#if !CAPNP_LITE
static const uint16_t m_b31f871133cef5fe[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_b31f871133cef5fe = {
  0xb31f871133cef5fe, b_b31f871133cef5fe.words, 34, nullptr, m_b31f871133cef5fe,
  0, 4, nullptr, nullptr, nullptr, { &s_b31f871133cef5fe, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(S3tc_b31f871133cef5fe, b31f871133cef5fe);
static const ::capnp::_::AlignedData<75> b_a5b0498648f87aab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171, 122, 248,  72, 134,  73, 176, 165,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     66, 108, 111,  99, 107,  83, 105, 122,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     56,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  52, 120,  52,   0,   0,   0,   0,
     98,  53, 120,  52,   0,   0,   0,   0,
     98,  53, 120,  53,   0,   0,   0,   0,
     98,  54, 120,  53,   0,   0,   0,   0,
     98,  54, 120,  54,   0,   0,   0,   0,
     98,  56, 120,  53,   0,   0,   0,   0,
     98,  56, 120,  54,   0,   0,   0,   0,
     98,  49,  48, 120,  53,   0,   0,   0,
     98,  49,  48, 120,  54,   0,   0,   0,
     98,  56, 120,  56,   0,   0,   0,   0,
     98,  49,  48, 120,  56,   0,   0,   0,
     98,  49,  48, 120,  49,  48,   0,   0,
     98,  49,  50, 120,  49,  48,   0,   0,
     98,  49,  50, 120,  49,  50,   0,   0, }
};
::capnp::word const* const bp_a5b0498648f87aab = b_a5b0498648f87aab.words;
#if !CAPNP_LITE
static const uint16_t m_a5b0498648f87aab[] = {11, 7, 8, 10, 12, 13, 0, 1, 2, 3, 4, 5, 6, 9};
const ::capnp::_::RawSchema s_a5b0498648f87aab = {
  0xa5b0498648f87aab, b_a5b0498648f87aab.words, 75, nullptr, m_a5b0498648f87aab,
  0, 14, nullptr, nullptr, nullptr, { &s_a5b0498648f87aab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(BlockSize_a5b0498648f87aab, a5b0498648f87aab);
static const ::capnp::_::AlignedData<35> b_efac83628ed9c608 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      8, 198, 217, 142,  98, 131, 172, 239,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     67, 104,  97, 110, 110, 101, 108, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
    114, 103,   0,   0,   0,   0,   0,   0,
    114, 103,  98,   0,   0,   0,   0,   0,
    114, 103,  98,  97,   0,   0,   0,   0, }
};
::capnp::word const* const bp_efac83628ed9c608 = b_efac83628ed9c608.words;
#if !CAPNP_LITE
static const uint16_t m_efac83628ed9c608[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_efac83628ed9c608 = {
  0xefac83628ed9c608, b_efac83628ed9c608.words, 35, nullptr, m_efac83628ed9c608,
  0, 4, nullptr, nullptr, nullptr, { &s_efac83628ed9c608, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Channels_efac83628ed9c608, efac83628ed9c608);
static const ::capnp::_::AlignedData<125> b_bf40f4217973ffde = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    222, 255, 115, 121,  33, 244,  64, 191,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     68,  97, 116,  97,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     80,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    229,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     19,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     66, 121, 116, 101,   0,   0,   0,   0,
     98, 121, 116, 101,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     83, 104, 111, 114, 116,   0,   0,   0,
    115, 104, 111, 114, 116,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     73, 110, 116,   0,   0,   0,   0,   0,
    105, 110, 116,   0,   0,   0,   0,   0,
    102, 108, 111,  97, 116,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     66, 121, 116, 101,  51,  51,  50,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     66, 121, 116, 101,  50,  51,  51,  82,
    101, 118,   0,   0,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     83, 104, 111, 114, 116,  53,  54,  53,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     83, 104, 111, 114, 116,  53,  54,  53,
     82, 101, 118,   0,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     83, 104, 111, 114, 116,  52,  52,  52,
     52,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     83, 104, 111, 114, 116,  52,  52,  52,
     52,  82, 101, 118,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     83, 104, 111, 114, 116,  53,  53,  53,
     49,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     83, 104, 111, 114, 116,  49,  53,  53,
     53,  82, 101, 118,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     73, 110, 116,  56,  56,  56,  56,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     73, 110, 116,  56,  56,  56,  56,  82,
    101, 118,   0,   0,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     73, 110, 116,  49,  48,  49,  48,  49,
     48,  50,   0,   0,   0,   0,   0,   0,
    117, 110, 115, 105, 103, 110, 101, 100,
     73, 110, 116,  50,  49,  48,  49,  48,
     49,  48,  82, 101, 118,   0,   0,   0,
    117, 110, 115, 112, 101,  99, 105, 102,
    105, 101, 100,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bf40f4217973ffde = b_bf40f4217973ffde.words;
#if !CAPNP_LITE
static const uint16_t m_bf40f4217973ffde[] = {1, 6, 5, 3, 0, 8, 7, 4, 17, 18, 15, 16, 2, 14, 11, 12, 13, 9, 10, 19};
const ::capnp::_::RawSchema s_bf40f4217973ffde = {
  0xbf40f4217973ffde, b_bf40f4217973ffde.words, 125, nullptr, m_bf40f4217973ffde,
  0, 20, nullptr, nullptr, nullptr, { &s_bf40f4217973ffde, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(DataType_bf40f4217973ffde, bf40f4217973ffde);
static const ::capnp::_::AlignedData<49> b_fac0ea8b372b50ff = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    255,  80,  43,  55, 139, 234, 192, 250,
     24,   0,   0,   0,   1,   0,   1,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     85, 110,  99, 111, 109, 112, 114, 101,
    115, 115, 101, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 114, 109,  97, 116,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      8, 198, 217, 142,  98, 131, 172, 239,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    222, 255, 115, 121,  33, 244,  64, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fac0ea8b372b50ff = b_fac0ea8b372b50ff.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fac0ea8b372b50ff[] = {
  &s_bf40f4217973ffde,
  &s_efac83628ed9c608,
};
static const uint16_t m_fac0ea8b372b50ff[] = {0, 1};
static const uint16_t i_fac0ea8b372b50ff[] = {0, 1};
const ::capnp::_::RawSchema s_fac0ea8b372b50ff = {
  0xfac0ea8b372b50ff, b_fac0ea8b372b50ff.words, 49, d_fac0ea8b372b50ff, m_fac0ea8b372b50ff,
  2, 2, i_fac0ea8b372b50ff, nullptr, nullptr, { &s_fac0ea8b372b50ff, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_fc05632244f526d5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    213,  38, 245,  68,  34,  99,   5, 252,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 120, 116, 117, 114, 101,  75,
    105, 110, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116, 117, 114, 101,  49,
     68,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116, 117, 114, 101,  50,
     68,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116, 117, 114, 101,  51,
     68,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fc05632244f526d5 = b_fc05632244f526d5.words;
#if !CAPNP_LITE
static const uint16_t m_fc05632244f526d5[] = {0, 1, 2};
const ::capnp::_::RawSchema s_fc05632244f526d5 = {
  0xfc05632244f526d5, b_fc05632244f526d5.words, 34, nullptr, m_fc05632244f526d5,
  0, 3, nullptr, nullptr, nullptr, { &s_fc05632244f526d5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(TextureKind_fc05632244f526d5, fc05632244f526d5);
static const ::capnp::_::AlignedData<100> b_c4cf8d45880f89f2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
     24,   0,   0,   0,   1,   0,   3,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 120, 116, 117, 114, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    197, 217,  45,   2, 224, 114,  73, 198,
    157,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    243, 166, 230, 147,  38, 121,  29, 248,
    141,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    213,  38, 245,  68,  34,  99,   5, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 109, 101, 110, 115, 105, 111,
    110, 115,   0,   0,   0,   0,   0,   0,
    115, 114, 103,  98,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112, 114, 101, 115, 115,
    105, 111, 110,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 112, 109,  97, 112, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c4cf8d45880f89f2 = b_c4cf8d45880f89f2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c4cf8d45880f89f2[] = {
  &s_c64972e0022dd9c5,
  &s_f81d792693e6a6f3,
  &s_fc05632244f526d5,
};
static const uint16_t m_c4cf8d45880f89f2[] = {3, 4, 1, 0, 5, 2};
static const uint16_t i_c4cf8d45880f89f2[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_c4cf8d45880f89f2 = {
  0xc4cf8d45880f89f2, b_c4cf8d45880f89f2.words, 100, d_c4cf8d45880f89f2, m_c4cf8d45880f89f2,
  3, 6, i_c4cf8d45880f89f2, nullptr, nullptr, { &s_c4cf8d45880f89f2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_c64972e0022dd9c5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    197, 217,  45,   2, 224, 114,  73, 198,
     32,   0,   0,   0,   1,   0,   3,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      3,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 120, 116, 117, 114, 101,  46,
    100, 105, 109, 101, 110, 115, 105, 111,
    110, 115,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    119, 105, 100, 116, 104,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 105, 103, 104, 116,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 116, 104,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c64972e0022dd9c5 = b_c64972e0022dd9c5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c64972e0022dd9c5[] = {
  &s_c4cf8d45880f89f2,
};
static const uint16_t m_c64972e0022dd9c5[] = {2, 1, 0};
static const uint16_t i_c64972e0022dd9c5[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c64972e0022dd9c5 = {
  0xc64972e0022dd9c5, b_c64972e0022dd9c5.words, 64, d_c64972e0022dd9c5, m_c64972e0022dd9c5,
  1, 3, i_c64972e0022dd9c5, nullptr, nullptr, { &s_c64972e0022dd9c5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<94> b_f81d792693e6a6f3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    243, 166, 230, 147,  38, 121,  29, 248,
     32,   0,   0,   0,   1,   0,   3,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      3,   0,   7,   0,   1,   0,   5,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 120, 116, 117, 114, 101,  46,
     99, 111, 109, 112, 114, 101, 115, 115,
    105, 111, 110,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   9,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   9,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   9,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   9,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    255,  80,  43,  55, 139, 234, 192, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 103, 116,  99,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    145, 102, 217, 189,  36, 204,  89, 154,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 112, 116,  99,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    240,  10,  74, 249, 137,  36, 134, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 115, 116,  99,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    171, 122, 248,  72, 134,  73, 176, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  51, 116,  99,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    254, 245, 206,  51,  17, 135,  31, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f81d792693e6a6f3 = b_f81d792693e6a6f3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f81d792693e6a6f3[] = {
  &s_9a59cc24bdd96691,
  &s_a5b0498648f87aab,
  &s_b31f871133cef5fe,
  &s_c4cf8d45880f89f2,
  &s_e7862489f94a0af0,
  &s_fac0ea8b372b50ff,
};
static const uint16_t m_f81d792693e6a6f3[] = {3, 2, 0, 1, 4};
static const uint16_t i_f81d792693e6a6f3[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_f81d792693e6a6f3 = {
  0xf81d792693e6a6f3, b_f81d792693e6a6f3.words, 94, d_f81d792693e6a6f3, m_f81d792693e6a6f3,
  6, 5, i_f81d792693e6a6f3, nullptr, nullptr, { &s_f81d792693e6a6f3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<108> b_9ff57f9fd9f83b0d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     13,  59, 248, 217, 159, 127, 245, 159,
     24,   0,   0,   0,   1,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     67, 117,  98, 101, 109,  97, 112,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
    114, 105, 103, 104, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 102, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 111, 110, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ff57f9fd9f83b0d = b_9ff57f9fd9f83b0d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9ff57f9fd9f83b0d[] = {
  &s_c4cf8d45880f89f2,
};
static const uint16_t m_9ff57f9fd9f83b0d[] = {4, 3, 5, 1, 0, 2};
static const uint16_t i_9ff57f9fd9f83b0d[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_9ff57f9fd9f83b0d = {
  0x9ff57f9fd9f83b0d, b_9ff57f9fd9f83b0d.words, 108, d_9ff57f9fd9f83b0d, m_9ff57f9fd9f83b0d,
  1, 6, i_9ff57f9fd9f83b0d, nullptr, nullptr, { &s_9ff57f9fd9f83b0d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_8630d6be0dfe5710 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     16,  87, 254,  13, 190, 214,  48, 134,
     24,   0,   0,   0,   1,   0,   1,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     82, 111, 111, 116,  84, 101, 120, 116,
    117, 114, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    252, 216,  73,  35, 104, 210, 120, 231,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116, 117, 114, 101,   0, }
};
::capnp::word const* const bp_8630d6be0dfe5710 = b_8630d6be0dfe5710.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8630d6be0dfe5710[] = {
  &s_e778d2682349d8fc,
};
static const uint16_t m_8630d6be0dfe5710[] = {0};
static const uint16_t i_8630d6be0dfe5710[] = {0};
const ::capnp::_::RawSchema s_8630d6be0dfe5710 = {
  0x8630d6be0dfe5710, b_8630d6be0dfe5710.words, 27, d_8630d6be0dfe5710, m_8630d6be0dfe5710,
  1, 1, i_8630d6be0dfe5710, nullptr, nullptr, { &s_8630d6be0dfe5710, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_e778d2682349d8fc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    252, 216,  73,  35, 104, 210, 120, 231,
     36,   0,   0,   0,   1,   0,   1,   0,
     16,  87, 254,  13, 190, 214,  48, 134,
      1,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     82, 111, 111, 116,  84, 101, 120, 116,
    117, 114, 101,  46, 116, 101, 120, 116,
    117, 114, 101,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 105, 110, 103, 108, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117,  98, 101, 109,  97, 112,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     13,  59, 248, 217, 159, 127, 245, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e778d2682349d8fc = b_e778d2682349d8fc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e778d2682349d8fc[] = {
  &s_8630d6be0dfe5710,
  &s_9ff57f9fd9f83b0d,
  &s_c4cf8d45880f89f2,
};
static const uint16_t m_e778d2682349d8fc[] = {1, 0};
static const uint16_t i_e778d2682349d8fc[] = {0, 1};
const ::capnp::_::RawSchema s_e778d2682349d8fc = {
  0xe778d2682349d8fc, b_e778d2682349d8fc.words, 49, d_e778d2682349d8fc, m_e778d2682349d8fc,
  3, 2, i_e778d2682349d8fc, nullptr, nullptr, { &s_e778d2682349d8fc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Uncompressed
#ifndef _MSC_VER
constexpr uint16_t Uncompressed::_capnpPrivate::dataWordSize;
constexpr uint16_t Uncompressed::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Uncompressed::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Uncompressed::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Uncompressed::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Texture
#ifndef _MSC_VER
constexpr uint16_t Texture::_capnpPrivate::dataWordSize;
constexpr uint16_t Texture::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Texture::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Texture::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Texture::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Texture::Dimensions
#ifndef _MSC_VER
constexpr uint16_t Texture::Dimensions::_capnpPrivate::dataWordSize;
constexpr uint16_t Texture::Dimensions::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Texture::Dimensions::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Texture::Dimensions::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Texture::Dimensions::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Texture::Compression
#ifndef _MSC_VER
constexpr uint16_t Texture::Compression::_capnpPrivate::dataWordSize;
constexpr uint16_t Texture::Compression::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Texture::Compression::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Texture::Compression::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Texture::Compression::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Cubemap
#ifndef _MSC_VER
constexpr uint16_t Cubemap::_capnpPrivate::dataWordSize;
constexpr uint16_t Cubemap::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Cubemap::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Cubemap::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Cubemap::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RootTexture
#ifndef _MSC_VER
constexpr uint16_t RootTexture::_capnpPrivate::dataWordSize;
constexpr uint16_t RootTexture::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RootTexture::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RootTexture::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RootTexture::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RootTexture::Texture
#ifndef _MSC_VER
constexpr uint16_t RootTexture::Texture::_capnpPrivate::dataWordSize;
constexpr uint16_t RootTexture::Texture::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RootTexture::Texture::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RootTexture::Texture::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RootTexture::Texture::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



