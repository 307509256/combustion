// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: protocols\mesh.capnp

#include "protocols\mesh.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_fbeac91137839967 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103, 153, 131,  55,  17, 201, 234, 251,
     21,   0,   0,   0,   1,   0,   1,   0,
    242, 255, 207,  40,  76,  19,  99, 240,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 109, 101, 115, 104,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 120,
     67, 111, 111, 114, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    117,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fbeac91137839967 = b_fbeac91137839967.words;
#if !CAPNP_LITE
static const uint16_t m_fbeac91137839967[] = {0, 1};
static const uint16_t i_fbeac91137839967[] = {0, 1};
const ::capnp::_::RawSchema s_fbeac91137839967 = {
  0xfbeac91137839967, b_fbeac91137839967.words, 48, nullptr, m_fbeac91137839967,
  0, 2, i_fbeac91137839967, nullptr, nullptr, { &s_fbeac91137839967, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<88> b_a0b3f1b2653c62aa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    170,  98,  60, 101, 178, 241, 179, 160,
     21,   0,   0,   0,   1,   0,   0,   0,
    242, 255, 207,  40,  76,  19,  99, 240,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 109, 101, 115, 104,  46,  99,
     97, 112, 110, 112,  58,  86, 101, 114,
    116, 101, 120,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     81, 136, 209, 217, 136,  26,  25, 187,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 114, 109,  97, 108,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    166, 211,  83, 226,   0, 146,  83, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 118,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 153, 131,  55,  17, 201, 234, 251,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a0b3f1b2653c62aa = b_a0b3f1b2653c62aa.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a0b3f1b2653c62aa[] = {
  &s_b17d86024218444d,
  &s_bb191a88d9d18851,
};
static const uint16_t m_a0b3f1b2653c62aa[] = {1, 0, 2};
static const uint16_t i_a0b3f1b2653c62aa[] = {0, 1, 2};
const ::capnp::_::RawBrandedSchema::Dependency bd_a0b3f1b2653c62aa[] = {
  { 16777217,  ::Option< ::Vector3>::_capnpPrivate::brand },
  { 16777218,  ::Option< ::TexCoord>::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_a0b3f1b2653c62aa = {
  0xa0b3f1b2653c62aa, b_a0b3f1b2653c62aa.words, 88, d_a0b3f1b2653c62aa, m_a0b3f1b2653c62aa,
  2, 3, i_a0b3f1b2653c62aa, nullptr, nullptr, { &s_a0b3f1b2653c62aa, nullptr, bd_a0b3f1b2653c62aa, 0, sizeof(bd_a0b3f1b2653c62aa) / sizeof(bd_a0b3f1b2653c62aa[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<100> b_8876750e6bdf2879 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121,  40, 223, 107,  14, 117, 118, 136,
     21,   0,   0,   0,   1,   0,   0,   0,
    242, 255, 207,  40,  76,  19,  99, 240,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 109, 101, 115, 104,  46,  99,
     97, 112, 110, 112,  58,  86, 101, 114,
    116, 105,  99, 101, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    232,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     81, 136, 209, 217, 136,  26,  25, 187,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 114, 109,  97, 108, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    166, 211,  83, 226,   0, 146,  83, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 118, 115,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 153, 131,  55,  17, 201, 234, 251,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8876750e6bdf2879 = b_8876750e6bdf2879.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8876750e6bdf2879[] = {
  &s_b17d86024218444d,
  &s_bb191a88d9d18851,
};
static const uint16_t m_8876750e6bdf2879[] = {1, 0, 2};
static const uint16_t i_8876750e6bdf2879[] = {0, 1, 2};
const ::capnp::_::RawBrandedSchema::Dependency bd_8876750e6bdf2879[] = {
  { 16777217,  ::Option< ::capnp::List< ::Vector3>>::_capnpPrivate::brand },
  { 16777218,  ::Option< ::capnp::List< ::TexCoord>>::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_8876750e6bdf2879 = {
  0x8876750e6bdf2879, b_8876750e6bdf2879.words, 100, d_8876750e6bdf2879, m_8876750e6bdf2879,
  2, 3, i_8876750e6bdf2879, nullptr, nullptr, { &s_8876750e6bdf2879, nullptr, bd_8876750e6bdf2879, 0, sizeof(bd_8876750e6bdf2879) / sizeof(bd_8876750e6bdf2879[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_9c4ab6880b9462a0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    160,  98, 148,  11, 136, 182,  74, 156,
     21,   0,   0,   0,   1,   0,   1,   0,
    242, 255, 207,  40,  76,  19,  99, 240,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 109, 101, 115, 104,  46,  99,
     97, 112, 110, 112,  58,  77, 101, 115,
    104,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     56,  87, 136, 195, 122, 100,  47, 130,
     93,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 116, 101, 114, 105,  97, 108,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 116, 105,  99, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 105,  99, 101, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     77,  68,  24,  66,   2, 134, 125, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c4ab6880b9462a0 = b_9c4ab6880b9462a0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9c4ab6880b9462a0[] = {
  &s_822f647ac3885738,
  &s_b17d86024218444d,
};
static const uint16_t m_9c4ab6880b9462a0[] = {2, 0, 1};
static const uint16_t i_9c4ab6880b9462a0[] = {0, 1, 2};
const ::capnp::_::RawBrandedSchema::Dependency bd_9c4ab6880b9462a0[] = {
  { 16777218,  ::Option< ::capnp::List< ::uint32_t>>::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_9c4ab6880b9462a0 = {
  0x9c4ab6880b9462a0, b_9c4ab6880b9462a0.words, 78, d_9c4ab6880b9462a0, m_9c4ab6880b9462a0,
  2, 3, i_9c4ab6880b9462a0, nullptr, nullptr, { &s_9c4ab6880b9462a0, nullptr, bd_9c4ab6880b9462a0, 0, sizeof(bd_9c4ab6880b9462a0) / sizeof(bd_9c4ab6880b9462a0[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_822f647ac3885738 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     56,  87, 136, 195, 122, 100,  47, 130,
     26,   0,   0,   0,   1,   0,   1,   0,
    160,  98, 148,  11, 136, 182,  74, 156,
      3,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 109, 101, 115, 104,  46,  99,
     97, 112, 110, 112,  58,  77, 101, 115,
    104,  46, 118, 101, 114, 116, 105,  99,
    101, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 116, 101, 114, 108, 101,  97,
    118, 101, 100,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    170,  98,  60, 101, 178, 241, 179, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 114, 101, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121,  40, 223, 107,  14, 117, 118, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_822f647ac3885738 = b_822f647ac3885738.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_822f647ac3885738[] = {
  &s_8876750e6bdf2879,
  &s_9c4ab6880b9462a0,
  &s_a0b3f1b2653c62aa,
};
static const uint16_t m_822f647ac3885738[] = {1, 0};
static const uint16_t i_822f647ac3885738[] = {0, 1};
const ::capnp::_::RawSchema s_822f647ac3885738 = {
  0x822f647ac3885738, b_822f647ac3885738.words, 54, d_822f647ac3885738, m_822f647ac3885738,
  3, 2, i_822f647ac3885738, nullptr, nullptr, { &s_822f647ac3885738, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// TexCoord
#ifndef _MSC_VER
constexpr uint16_t TexCoord::_capnpPrivate::dataWordSize;
constexpr uint16_t TexCoord::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind TexCoord::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TexCoord::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* TexCoord::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Vertex
#ifndef _MSC_VER
constexpr uint16_t Vertex::_capnpPrivate::dataWordSize;
constexpr uint16_t Vertex::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Vertex::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Vertex::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Vertex::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Vertices
#ifndef _MSC_VER
constexpr uint16_t Vertices::_capnpPrivate::dataWordSize;
constexpr uint16_t Vertices::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Vertices::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Vertices::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Vertices::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Mesh
#ifndef _MSC_VER
constexpr uint16_t Mesh::_capnpPrivate::dataWordSize;
constexpr uint16_t Mesh::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Mesh::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Mesh::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Mesh::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Mesh::Vertices
#ifndef _MSC_VER
constexpr uint16_t Mesh::Vertices::_capnpPrivate::dataWordSize;
constexpr uint16_t Mesh::Vertices::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Mesh::Vertices::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Mesh::Vertices::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Mesh::Vertices::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



