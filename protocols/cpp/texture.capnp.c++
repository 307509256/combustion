// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: protocols\texture.capnp

#include "protocols\texture.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<36> b_9a59cc24bdd96691 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145, 102, 217, 189,  36, 204,  89, 154,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     82, 103, 116,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 100,   0,   0,   0,   0,   0,
    114, 101, 100,  83, 105, 103, 110, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
    114, 103,   0,   0,   0,   0,   0,   0,
    114, 103,  83, 105, 103, 110, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9a59cc24bdd96691 = b_9a59cc24bdd96691.words;
#if !CAPNP_LITE
static const uint16_t m_9a59cc24bdd96691[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_9a59cc24bdd96691 = {
  0x9a59cc24bdd96691, b_9a59cc24bdd96691.words, 36, nullptr, m_9a59cc24bdd96691,
  0, 4, nullptr, nullptr, nullptr, { &s_9a59cc24bdd96691, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Rgtc_9a59cc24bdd96691, 9a59cc24bdd96691);
static const ::capnp::_::AlignedData<33> b_e7862489f94a0af0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    240,  10,  74, 249, 137,  36, 134, 231,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     66, 112, 116,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 103,  98,  97,   0,   0,   0,   0,
    114, 103,  98,  70, 108, 111,  97, 116,
     83, 105, 103, 110, 101, 100,   0,   0,
    114, 103,  98,  70, 108, 111,  97, 116,
     85, 110, 115, 105, 103, 110, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7862489f94a0af0 = b_e7862489f94a0af0.words;
#if !CAPNP_LITE
static const uint16_t m_e7862489f94a0af0[] = {1, 2, 0};
const ::capnp::_::RawSchema s_e7862489f94a0af0 = {
  0xe7862489f94a0af0, b_e7862489f94a0af0.words, 33, nullptr, m_e7862489f94a0af0,
  0, 3, nullptr, nullptr, nullptr, { &s_e7862489f94a0af0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Bptc_e7862489f94a0af0, e7862489f94a0af0);
static const ::capnp::_::AlignedData<34> b_b31f871133cef5fe = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    254, 245, 206,  51,  17, 135,  31, 179,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     83,  51, 116,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 103,  98,  49,   0,   0,   0,   0,
    114, 103,  98,  97,  49,   0,   0,   0,
    114, 103,  98,  97,  51,   0,   0,   0,
    114, 103,  98,  97,  53,   0,   0,   0, }
};
::capnp::word const* const bp_b31f871133cef5fe = b_b31f871133cef5fe.words;
#if !CAPNP_LITE
static const uint16_t m_b31f871133cef5fe[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_b31f871133cef5fe = {
  0xb31f871133cef5fe, b_b31f871133cef5fe.words, 34, nullptr, m_b31f871133cef5fe,
  0, 4, nullptr, nullptr, nullptr, { &s_b31f871133cef5fe, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(S3tc_b31f871133cef5fe, b31f871133cef5fe);
static const ::capnp::_::AlignedData<75> b_a5b0498648f87aab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171, 122, 248,  72, 134,  73, 176, 165,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     66, 108, 111,  99, 107,  83, 105, 122,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     56,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  52, 120,  52,   0,   0,   0,   0,
     98,  53, 120,  52,   0,   0,   0,   0,
     98,  53, 120,  53,   0,   0,   0,   0,
     98,  54, 120,  53,   0,   0,   0,   0,
     98,  54, 120,  54,   0,   0,   0,   0,
     98,  56, 120,  53,   0,   0,   0,   0,
     98,  56, 120,  54,   0,   0,   0,   0,
     98,  49,  48, 120,  53,   0,   0,   0,
     98,  49,  48, 120,  54,   0,   0,   0,
     98,  56, 120,  56,   0,   0,   0,   0,
     98,  49,  48, 120,  56,   0,   0,   0,
     98,  49,  48, 120,  49,  48,   0,   0,
     98,  49,  50, 120,  49,  48,   0,   0,
     98,  49,  50, 120,  49,  50,   0,   0, }
};
::capnp::word const* const bp_a5b0498648f87aab = b_a5b0498648f87aab.words;
#if !CAPNP_LITE
static const uint16_t m_a5b0498648f87aab[] = {11, 7, 8, 10, 12, 13, 0, 1, 2, 3, 4, 5, 6, 9};
const ::capnp::_::RawSchema s_a5b0498648f87aab = {
  0xa5b0498648f87aab, b_a5b0498648f87aab.words, 75, nullptr, m_a5b0498648f87aab,
  0, 14, nullptr, nullptr, nullptr, { &s_a5b0498648f87aab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(BlockSize_a5b0498648f87aab, a5b0498648f87aab);
static const ::capnp::_::AlignedData<34> b_8315320b3b27faa1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    161, 250,  39,  59,  11,  50,  21, 131,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     82,  97, 119,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
    114, 103,   0,   0,   0,   0,   0,   0,
    114, 103,  98,   0,   0,   0,   0,   0,
    114, 103,  98,  97,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8315320b3b27faa1 = b_8315320b3b27faa1.words;
#if !CAPNP_LITE
static const uint16_t m_8315320b3b27faa1[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_8315320b3b27faa1 = {
  0x8315320b3b27faa1, b_8315320b3b27faa1.words, 34, nullptr, m_8315320b3b27faa1,
  0, 4, nullptr, nullptr, nullptr, { &s_8315320b3b27faa1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Raw_8315320b3b27faa1, 8315320b3b27faa1);
static const ::capnp::_::AlignedData<33> b_ce85a5aed9db9382 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130, 147, 219, 217, 174, 165, 133, 206,
     24,   0,   0,   0,   2,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     75, 105, 110, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116, 117, 114, 101,  49,
     68,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116, 117, 114, 101,  50,
     68,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116, 117, 114, 101,  51,
     68,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ce85a5aed9db9382 = b_ce85a5aed9db9382.words;
#if !CAPNP_LITE
static const uint16_t m_ce85a5aed9db9382[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ce85a5aed9db9382 = {
  0xce85a5aed9db9382, b_ce85a5aed9db9382.words, 33, nullptr, m_ce85a5aed9db9382,
  0, 3, nullptr, nullptr, nullptr, { &s_ce85a5aed9db9382, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Kind_ce85a5aed9db9382, ce85a5aed9db9382);
static const ::capnp::_::AlignedData<136> b_c4cf8d45880f89f2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
     24,   0,   0,   0,   1,   0,   3,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 120, 116, 117, 114, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     61, 158,   5,  28, 102,  95, 168, 136,
    217,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,  96,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
    119, 105, 100, 116, 104,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 105, 103, 104, 116,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112, 114, 101, 115, 115,
    105, 111, 110,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114, 103,  98,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 116, 104,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    130, 147, 219, 217, 174, 165, 133, 206,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 112, 109,  97, 112, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c4cf8d45880f89f2 = b_c4cf8d45880f89f2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c4cf8d45880f89f2[] = {
  &s_88a85f661c059e3d,
  &s_ce85a5aed9db9382,
};
static const uint16_t m_c4cf8d45880f89f2[] = {2, 3, 5, 1, 6, 7, 4, 0};
static const uint16_t i_c4cf8d45880f89f2[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_c4cf8d45880f89f2 = {
  0xc4cf8d45880f89f2, b_c4cf8d45880f89f2.words, 136, d_c4cf8d45880f89f2, m_c4cf8d45880f89f2,
  2, 8, i_c4cf8d45880f89f2, nullptr, nullptr, { &s_c4cf8d45880f89f2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<94> b_88a85f661c059e3d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     61, 158,   5,  28, 102,  95, 168, 136,
     32,   0,   0,   0,   1,   0,   3,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      2,   0,   7,   0,   1,   0,   5,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 120, 116, 117, 114, 101,  46,
     99, 111, 109, 112, 114, 101, 115, 115,
    105, 111, 110,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   4,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   4,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   4,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    161, 250,  39,  59,  11,  50,  21, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 103, 116,  99,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    145, 102, 217, 189,  36, 204,  89, 154,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 112, 116,  99,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    240,  10,  74, 249, 137,  36, 134, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 115, 116,  99,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    171, 122, 248,  72, 134,  73, 176, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  51, 116,  99,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    254, 245, 206,  51,  17, 135,  31, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_88a85f661c059e3d = b_88a85f661c059e3d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_88a85f661c059e3d[] = {
  &s_8315320b3b27faa1,
  &s_9a59cc24bdd96691,
  &s_a5b0498648f87aab,
  &s_b31f871133cef5fe,
  &s_c4cf8d45880f89f2,
  &s_e7862489f94a0af0,
};
static const uint16_t m_88a85f661c059e3d[] = {3, 2, 0, 1, 4};
static const uint16_t i_88a85f661c059e3d[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_88a85f661c059e3d = {
  0x88a85f661c059e3d, b_88a85f661c059e3d.words, 94, d_88a85f661c059e3d, m_88a85f661c059e3d,
  6, 5, i_88a85f661c059e3d, nullptr, nullptr, { &s_88a85f661c059e3d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<108> b_9ff57f9fd9f83b0d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     13,  59, 248, 217, 159, 127, 245, 159,
     24,   0,   0,   0,   1,   0,   0,   0,
    166, 163, 120,  54, 208, 127, 100, 160,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
    115,  92, 116, 101, 120, 116, 117, 114,
    101,  46,  99,  97, 112, 110, 112,  58,
     67, 117,  98, 101, 109,  97, 112,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
    114, 105, 103, 104, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 102, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 111, 110, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    242, 137,  15, 136,  69, 141, 207, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ff57f9fd9f83b0d = b_9ff57f9fd9f83b0d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9ff57f9fd9f83b0d[] = {
  &s_c4cf8d45880f89f2,
};
static const uint16_t m_9ff57f9fd9f83b0d[] = {4, 3, 5, 1, 0, 2};
static const uint16_t i_9ff57f9fd9f83b0d[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_9ff57f9fd9f83b0d = {
  0x9ff57f9fd9f83b0d, b_9ff57f9fd9f83b0d.words, 108, d_9ff57f9fd9f83b0d, m_9ff57f9fd9f83b0d,
  1, 6, i_9ff57f9fd9f83b0d, nullptr, nullptr, { &s_9ff57f9fd9f83b0d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Texture
#ifndef _MSC_VER
constexpr uint16_t Texture::_capnpPrivate::dataWordSize;
constexpr uint16_t Texture::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Texture::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Texture::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Texture::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Texture::Compression
#ifndef _MSC_VER
constexpr uint16_t Texture::Compression::_capnpPrivate::dataWordSize;
constexpr uint16_t Texture::Compression::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Texture::Compression::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Texture::Compression::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Texture::Compression::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Cubemap
#ifndef _MSC_VER
constexpr uint16_t Cubemap::_capnpPrivate::dataWordSize;
constexpr uint16_t Cubemap::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Cubemap::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Cubemap::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Cubemap::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



